{"ast":null,"code":"export default function validation(inputs) {\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  const isContainsNumber = /^(?=.*[0-9])/;\n  const longitude = inputs.password.length;\n  const errors = {};\n  if (!inputs.username) {\n    errors.username = \"El nombre de usuario no puede estar vacío\";\n  }\n  ;\n  if (!regexEmail.test(inputs.username)) {\n    errors.username = \"El nombre de usuario tiene que ser un email\";\n  }\n  ;\n  if (inputs.username && inputs.username.length > 35) {\n    errors.username = \"El nombre de usuario no puede tener  más de 35 caracteres\";\n  }\n  ;\n  if (longitude < 6 || longitude > 10) {\n    errors.password = \"La contraseña tiene que tener una longitud entre 6 y 10 caracteres\";\n  }\n  ;\n  if (!isContainsNumber.test(inputs.password)) {\n    errors.password = \"La contraseña tiene que tener al menos un número\";\n  }\n  ;\n  return errors;\n}","map":{"version":3,"names":["validation","inputs","regexEmail","isContainsNumber","longitude","password","length","errors","username","test"],"sources":["C:/Users/Feoel que me use/OneDrive/Escritorio/Henry/M2/rick_and_morty/Client/src/components/Form/validation.js"],"sourcesContent":["export default function validation(inputs) {\r\n    const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    const isContainsNumber = /^(?=.*[0-9])/;\r\n    const longitude = inputs.password.length;\r\n    const errors = {};\r\n    \r\n    if(!inputs.username) {\r\n        errors.username = \"El nombre de usuario no puede estar vacío\";\r\n    };\r\n    if(!regexEmail.test(inputs.username)) {\r\n        errors.username = \"El nombre de usuario tiene que ser un email\";\r\n    };\r\n    if(inputs.username && inputs.username.length > 35) {\r\n        errors.username = \"El nombre de usuario no puede tener  más de 35 caracteres\";\r\n    };\r\n    if(longitude < 6 || longitude > 10) {\r\n        errors.password = \"La contraseña tiene que tener una longitud entre 6 y 10 caracteres\"\r\n    };\r\n    if(!isContainsNumber.test(inputs.password)) {\r\n        errors.password = \"La contraseña tiene que tener al menos un número\"\r\n    };\r\n    return errors;\r\n}"],"mappings":"AAAA,eAAe,SAASA,UAAUA,CAACC,MAAM,EAAE;EACvC,MAAMC,UAAU,GAAG,2CAA2C;EAC9D,MAAMC,gBAAgB,GAAG,cAAc;EACvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,QAAQ,CAACC,MAAM;EACxC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAG,CAACN,MAAM,CAACO,QAAQ,EAAE;IACjBD,MAAM,CAACC,QAAQ,GAAG,2CAA2C;EACjE;EAAC;EACD,IAAG,CAACN,UAAU,CAACO,IAAI,CAACR,MAAM,CAACO,QAAQ,CAAC,EAAE;IAClCD,MAAM,CAACC,QAAQ,GAAG,6CAA6C;EACnE;EAAC;EACD,IAAGP,MAAM,CAACO,QAAQ,IAAIP,MAAM,CAACO,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAE;IAC/CC,MAAM,CAACC,QAAQ,GAAG,2DAA2D;EACjF;EAAC;EACD,IAAGJ,SAAS,GAAG,CAAC,IAAIA,SAAS,GAAG,EAAE,EAAE;IAChCG,MAAM,CAACF,QAAQ,GAAG,oEAAoE;EAC1F;EAAC;EACD,IAAG,CAACF,gBAAgB,CAACM,IAAI,CAACR,MAAM,CAACI,QAAQ,CAAC,EAAE;IACxCE,MAAM,CAACF,QAAQ,GAAG,kDAAkD;EACxE;EAAC;EACD,OAAOE,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}